name: Build

on:
  workflow_call:
    inputs:
      dry-run:
        description: "Run in test mode without publishing artifacts"
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    env:
      CGO_ENABLED: 0
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@8e57b58e57be52ac95949151e2777ffda8501267
        with:
          go-version: 1.24.x

      - name: Install Syft for SBOM generation
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --config build/goreleaser/goreleaser.yaml --snapshot --clean ${{ fromJson(inputs.dry-run) && '--skip=publish' || '' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
          DRY_RUN: ${{ inputs.dry-run }}

      - name: Upload binary SBOMs
        if: ${{ !fromJson(inputs.dry-run) }}
        uses: actions/upload-artifact@de65e23aa2b7e23d713bb51fbfcb6d502f8667d8
        with:
          name: binary-sboms
          path: dist/*.sbom
          if-no-files-found: warn

      - name: Generate artifact attestation
        if: ${{ !fromJson(inputs.dry-run) }}
        uses: actions/attest-build-provenance@f0878de78276446bc2ff4a40ae81f8013db6d773
        with:
          subject-checksums: ./dist/checksums.txt

      - name: Clean up dist directory
        if: always()
        run: rm -rf dist
