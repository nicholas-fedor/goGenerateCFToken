name: go_build

on:
  release:
    types: [created]

jobs:
  build:
    name: build_to_release
    runs-on: ubuntu-latest
    strategy:
        matrix:
            goos: [linux]
            goarch: [amd64]
    steps:
    - name: Check out the code into the Go module directory
      uses: actions/checkout@v4

    - name: Read version from release.json
      uses: notiz-dev/github-action-json-property@release
      id: gogeneratecftoken_version
      with:
        path: 'release.json'
        prop_path: 'version'

    - name: Read go_version from release.json
      uses: notiz-dev/github-action-json-property@release
      id: go_version
      with:
        path: 'release.json'
        prop_path: 'go_version'
    
    - name: Install dependencies
      run: go get .

    - name: Build binary
      uses: wangyoucao577/go-release-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go${{ steps.go_version.outputs.prop }}.linux-amd64.tar.gz"
        ldflags: "-X 'main.GoGenerateCFTokenVersion=${{ steps.gogeneratecftoken_version.outputs.prop }}' -X 'main.GoVersion=${{ steps.go_version.outputs.prop }}'"